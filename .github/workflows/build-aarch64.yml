name: Build lxc for Android arm64

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: | 
             sudo apt-get update -qq
             sudo apt-get install -qq --yes \
                  apparmor bash-completion bridge-utils build-essential \
                  busybox-static clang cloud-image-utils curl dbus debhelper debootstrap \
                  devscripts dnsmasq-base docbook2x doxygen ed fakeroot file gcc cmake graphviz \
                  git iptables meson net-tools libapparmor-dev libcap-dev libgnutls28-dev liblua5.2-dev \
                  libpam0g-dev libseccomp-dev libselinux1-dev libtool linux-libc-dev \
                  llvm lsb-release make openssl pkg-config python3-all-dev \
                  python3-setuptools rsync squashfs-tools uidmap unzip uuid-runtime \
                  wget xz-utils systemd-coredump libdbus-1-dev libsystemd-dev gcc-aarch64-linux-gnu
             sudo apt-get remove --yes lxc-utils liblxc-common liblxc1 liblxc-dev

      - name: Get latest lxc version
        id: env
        run: |
          git clone https://github.com/lxc/lxc.git
          cd lxc
          lxc_source_dir=$(pwd)
          latest_version=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest lxc version: $latest_version"
          echo "::set-output name=latest_version::$latest_version"
          echo "::set-output name=lxc_source_dir::$lxc_source_dir"
          rm -rf ./*
          cd ../
          wget https://github.com/lxc/lxc/archive/refs/tags/$latest_version.tar.gz
          tar -zxvf $latest_version.tar.gz
          rm $latest_version.tar.gz

      - name: Patch lxc
        run: |
          latest_version=${{ steps.env.outputs.latest_version }}
          lxc_source_dir=${{ steps.env.outputs.lxc_source_dir }}
          if [[ "$latest_version" > "lxc-5.0.0" && "$latest_version" < "lxc-5.9.9" ]]; then
            sed -i "s/threads = dependency('threads')/threads = dependency('threads', static : true)/g" $lxc_source_dir/meson.build
            sed -i "s/libseccomp = dependency('libseccomp', required: false)/libseccomp = dependency('libseccomp', required: false,static : true)/g" $lxc_source_dir/meson.build
            sed -i "s/libselinux = dependency('libselinux', required: false)/libselinux = dependency('libselinux', required: false,static : true)/g" $lxc_source_dir/meson.build
            sed -i "s/libapparmor = dependency('libapparmor', required: false)/libapparmor = dependency('libapparmor', required: false,static : true)/g" $lxc_source_dir/meson.build
            sed -i "s/libopenssl = dependency('openssl', required: false)/libopenssl = dependency('openssl', required: false,static : true)/g" $lxc_source_dir/meson.build
            sed -i "s/libcap = dependency('libcap', required: false)/libcap = dependency('libcap', required: false,static : true)/g" $lxc_source_dir/meson.build

            sed -i "s/liblxc = shared_library(/liblxc = static_library(/g" $lxc_source_dir/meson.build
            sed -i '/version: liblxc_version,/d' $lxc_source_dir/meson.build

            echo "The lxc version $latest_version is patch completed"
          else
            echo "The lxc version $latest_version is not between 5.0.0 and 5.9.9"
          fi

      - name: Configure the cross file
        run: |
          wget https://musl.cc/aarch64-linux-musl-cross.tgz
          tar -xzf aarch64-linux-musl-cross.tgz
          pwd
          ls -al
          
          # aarch64-linux-gnu
          cat << EOF >> aarch64-linux-gnu
          [binaries]
          c = 'aarch64-linux-gnu-gcc'
          cpp = 'aarch64-linux-gnu-cpp'
          ar = 'aarch64-linux-gnu-ar'
          as = 'aarch64-linux-gnu-as'
          ld = 'aarch64-linux-gnu-ld'
          nm = 'aarch64-linux-gnu-nm'
          strip = 'aarch64-linux-gnu-strip'
          ranlib = 'aarch64-linux-gnu-ranlib'
          objcopy = 'aarch64-linux-gnu-objcopy'
          objdump = 'aarch64-linux-gnu-objdump'
          pkg-config = '/usr/bin/pkg-config'
          cmake = '/usr/bin/cmake'

          [built-in options]
          c_args = ['-O2', '-pipe', '-g', '-feliminate-unused-debug-types']
          c_link_args = ['-Wl,-rpath', '-Wl,--as-needed']
          cpp_args = ['-O2', '-pipe', '-g', '-feliminate-unused-debug-types']
          cpp_link_args = ['-Wl,-rpath', '-Wl,--as-needed']
          EOF

          # aarch64-linux-musl
          cat << EOF >> aarch64-linux-musl
          [binaries]
          c = 'aarch64-linux-gnu-gcc'
          cpp = 'aarch64-linux-gnu-cpp'
          ar = 'aarch64-linux-gnu-ar'
          as = 'aarch64-linux-gnu-as'
          ld = 'aarch64-linux-gnu-ld'
          nm = 'aarch64-linux-gnu-nm'
          strip = 'aarch64-linux-gnu-strip'
          ranlib = 'aarch64-linux-gnu-ranlib'
          objcopy = 'aarch64-linux-gnu-objcopy'
          objdump = 'aarch64-linux-gnu-objdump'
          pkg-config = '/usr/bin/pkg-config'
          cmake = '/usr/bin/cmake'

          [built-in options]
          c_args = ['-O2', '-pipe', '-g', '-feliminate-unused-debug-types']
          c_link_args = ['-Wl,-rpath', '-Wl,--as-needed']
          cpp_args = ['-O2', '-pipe', '-g', '-feliminate-unused-debug-types']
          cpp_link_args = ['-Wl,-rpath', '-Wl,--as-needed']
          EOF

      - name: Check the compilation configuration
        run: |
          echo GNU C Verion:
          aarch64-linux-gnu-gcc --version
          echo MUSL C Verion:
          ~/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc --version
          echo PKG-CONFIG INFO:
          pkg-config --list-all
          pkg-config --variable pc_path pkg-config
          echo ENV:
          env
        
      - name: Build lxc
        run: |
          version=$(ls | grep -oP '(?<=lxc-lxc-)[\d.]+')
          cd lxc-lxc-$version
          meson setup build -Dprefix=/data/lxc \
                            --default-library=static \
                            -Dinit-script=sysvinit \
                            -Druntime-path=/data/local/tmp \
                            -Dstrip=true \
                            -Dcapabilities=true \
                            -Dseccomp=true \
                            -Dselinux=true \
                            -Dapparmor=true \
                            -Dlog-path=/data/lxc/var/log/lxc \
                            -Ddata-path=/data/lxc/lib/lxc \
                            --localstatedir=/data/lxc/var/ \
                            -Dc_link_args="-static" \
                            --cross-file ../aarch64-linux-gnu
          meson compile -C build
          #make && make install

      - name: Zip lxc
        run: |
          cd lxc_install
          lxc_version=$(lxc/lxc --version | cut -d" " -f2)
          tar -czvf lxc_$lxc_version.tar.gz *
          mv lxc_$lxc_version.tar.gz ${{ github.workspace }}/lxc_$lxc_version.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: lxc
          path: lxc_$lxc_version.tar.gz
