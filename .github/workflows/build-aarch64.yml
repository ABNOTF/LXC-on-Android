name: Build lxc for Android arm64

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: | 
             sudo apt-get update -qq
             sudo apt-get install --yes --no-install-recommends \
                  apparmor bash-completion bridge-utils build-essential \
                  busybox-static clang cloud-image-utils curl dbus debhelper debootstrap \
                  devscripts dnsmasq-base docbook2x doxygen ed fakeroot file gcc graphviz \
                  git iptables meson net-tools libapparmor-dev libcap-dev libgnutls28-dev liblua5.2-dev \
                  libpam0g-dev libseccomp-dev libselinux1-dev libtool linux-libc-dev \
                  llvm lsb-release make openssl pkg-config python3-all-dev \
                  python3-setuptools rsync squashfs-tools uidmap unzip uuid-runtime \
                  wget xz-utils systemd-coredump libdbus-1-dev
             sudo apt-get remove --yes lxc-utils liblxc-common liblxc1 liblxc-dev

      - name: Get latest lxc version
        run: |
          git clone https://github.com/lxc/lxc.git
          cd lxc
          latest_version=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest lxc version: $latest_version"
          rm -rf ./*
          cd ../
          wget https://github.com/lxc/lxc/archive/refs/tags/$latest_version.tar.gz
          tar -zxvf $latest_version.tar.gz

      - name: Configure Android NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
          unzip android-ndk-r26b-linux.zip
          export ANDROID_NDK_HOME=~/android-ndk-r26b
          export PATH=$PATH:$ANDROID_NDK_HOME

          mkdir -p ~/.local/share/meson/cross/
          echo "[binaries]" > ~/.local/share/meson/cross/android-aarch64
          echo "c = '$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android33-clang'" >> ~/.local/share/meson/cross/android-aarch64
          echo "cpp = '$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android33-clang++'" >> ~/.local/share/meson/cross/android-aarch64
          echo "ar = '$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar'" >> ~/.local/share/meson/cross/android-aarch64
          echo "strip = '$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip'" >> ~/.local/share/meson/cross/android-aarch64
          echo "" >> ~/.local/share/meson/cross/android-aarch64
          echo "[properties]" >> ~/.local/share/meson/cross/android-aarch64
          echo "sys_root = '$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot'" >> ~/.local/share/meson/cross/android-aarch64

      - name: Get toolchain version
        run: |
          which $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android33-clang
          /home/runner/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android33-clang --version

      - name: Build lxc
        run: |
          version=$(ls | grep -oP '(?<=lxc-lxc-)[\d.]+')
          cd lxc-lxc-$version
          meson setup build --cross-file android-aarch64
          meson compile -C build --cross-file android-aarch64
          #make && make install

      - name: Zip lxc
        run: |
          cd lxc_install
          lxc_version=$(lxc/lxc --version | cut -d" " -f2)
          tar -czvf lxc_$lxc_version.tar.gz *
          mv lxc_$lxc_version.tar.gz ${{ github.workspace }}/lxc_$lxc_version.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: lxc
          path: lxc_$lxc_version.tar.gz
